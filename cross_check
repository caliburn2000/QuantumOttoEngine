# -*- coding: utf-8 -*-
"""
Created on Thu Mar 23 21:36:04 2023

@author: jackc
"""

import numpy as np

#assigning parameters 
ntot = 100
go = 1
p = np.zeros((ntot, 3)) # just guessing at an output space size.


k1 = 0
for i in range(1,ntot+1):
    for j in range(1,i+1):
        left = i - j**2
        if left <= 0:
            break
        elif np.sqrt(left) % 1 != 0:
            pass
        elif np.sqrt(left) % 1 == 0:
            #p[k, 1:3] = [j, np.sqrt(left)]
            p[k1, 1:3] = [j, np.sqrt(left)]
            k1 += 1
        if j+1 >= np.sqrt(left):
            break
        
p[:, 0] = p[:, 1]**2 + p[:, 2]**2
p = p[p[:, 0] != 0]
b = p.shape[0]*p.shape[1]
p = np.reshape(p, (b//3, 3)) 
N = int(b/3)
H = np.zeros((N, N))

# Generating Hamiltonian
for n in range(N):
    for m in range(n, N):
        n1 = p[n, 1]
        n2 = p[n, 2]
        m1 = p[m, 1]
        m2 = p[m, 2]
        
        # Using if statements to mimic Kronecker deltas
        d1 = 1 - np.any(n1 - m1)
        d2 = 1 - np.any(n2 - m2)
        d3 = 1 - np.any(n2 - m1)
        d4 = 1 - np.any(n1 - m2)
        
        a1 = 1 - np.any((n1 - m1) - (n2 - m2))
        a2 = 1 - np.any((n1 - m1) + (n2 - m2))
        a3 = np.any((n1 - m1) - (n2 + m2)) - 1
        a4 = np.any((n1 - m1) + (n2 + m2)) - 1
        a5 = np.any((n1 + m1) - (n2 - m2)) - 1
        a6 = np.any((n1 + m1) + (n2 - m2)) - 1       
        a7 = 1 - np.any((n1 + m1) - (n2 + m2))
        a8 = 1 - np.any((n1 + m1) + (n2 + m2))

        Hint = a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8
        if n1 != n2 and m1 != m2:
            H[n, m] =((m1**2+m2**2)*(d1*d2+d3*d4)+2*go/2*Hint)
        elif n1 == n2 and m1 == m2:     
            H[n,m]=((m1**2+m2**2)*(1-np.any(n1-m1))+go/2*Hint) 
        elif n1==n2 and m1!=m2:          
            H[n,m]=(np.sqrt(2)*go/2*Hint)
        elif m1==m2 and n1!=n2:
            H[n,m]=(np.sqrt(2)*go/2*Hint)

        H[m,n]=H[n,m];
        
#extract energy eigenvalues 
       
E = np.sort(np.real(np.linalg.eigvals(H)))
print(E)

np.savetxt("energy_from_python.csv", E)
